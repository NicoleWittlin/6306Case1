<style>
.reveal h3 {
  padding-bottom: 35px;
}

</style>

Untappd 2.0
========================================================
author: Cho Kim, Jonathan Marin, and Nicole Wittlin
date: 2/28/2018
autosize: true

SMU MSDS 6306 - Case Study #1


Introduction: Client
========================================================

![2.0](./untappd.jpg)

***

Business Challenge: Two New Business Units
- Community Engagement
- Beer Tourism


Data Overview
========================================================
- Origin of Data Sets
- Beer Data: 2410 observations, 7 variables, including Name, Style, Alcohol By Volume (ABV), International Bittering Units scale (IBU), and serving size (in oz)
- Brewery Data: 558 observations, 4 variables, including Name, City, and State
- Exploratory Analysis:
  - Missing Information
  - Duplicate Data

Data Overview
=========================================================
```{r echo = TRUE}
#setwd("C:/Users/Marin Family/Desktop/Doing Data Science/Case Study1 Git")

library(sqldf)
library(magrittr)
library(kableExtra)
library(ggplot2)
library(maps)
library(stringdist)

#Read the data
Beers <- read.csv("Beers.csv", encoding='UTF-8')
Brews <- read.csv("Breweries.csv", encoding='UTF-8', sep=",")

```

Duplicate Data Analysis
========================================================
```{r echo = FALSE, include = TRUE}


duplicate_Brews <- sqldf("select a.Brew_ID, b.Brew_ID, a.Name, B.Name, a.City, b.City, a.State, b.State
                         from Brews a join Brews b on a.Name = b.Name and a.Brew_ID <> b.Brew_ID")

duplicate_Brews$Name <- as.character(duplicate_Brews$Name)
duplicate_Brews$City <- as.character(duplicate_Brews$City)
duplicate_Brews$State <- as.character(duplicate_Brews$State)


levenshtein_feed <- sqldf("select a.Brew_ID, b.Brew_ID,  a.Name||a.City||a.State  as 'String1', b.Name||b.City||b.State as 'String2'
                          from Brews a join Brews b on a.Name = b.Name and a.Brew_ID <> b.Brew_ID")

levenshtein_feed$LDistance <- stringdist(levenshtein_feed$String1, levenshtein_feed$String2)

kable((duplicate_Brews), "html") %>% kable_styling(bootstrap_options="striped", full_width = F, font_size = 12)


```


Duplicate Data Resolution
========================================================

```{r echo = FALSE, include = TRUE}

kable((levenshtein_feed), "html") %>% kable_styling(bootstrap_options="striped", full_width = F, font_size = 12)


Brews <- read.csv("Breweries.csv", encoding='UTF-8', sep=",")

Brews$Brew_ID <- as.character(Brews$Brew_ID)

#Remove the duplicate breweries 
Brews <- sqldf(c("delete from Brews where Brew_ID = '96'", "select * from main.Brews"))
Brews <- sqldf(c("delete from Brews where Brew_ID = '59'", "select * from main.Brews"))
Brews <- sqldf(c("delete from Brews where Brew_ID = '378'", "select * from main.Brews"))

#Update the Beer brew id dups
Beers <- sqldf(c("update Beers set Brewery_id = '13' where Brewery_id = '96'", "select * from main.Beers"))
Beers <- sqldf(c("update Beers set Brewery_id = '139' where Brewery_id = '59'", "select * from main.Beers"))
Beers <- sqldf(c("update Beers set Brewery_id = '457' where Brewery_id = '378'", "select * from main.Beers"))


```

Number of NAs:
========================================================
```{r echo = FALSE, include = TRUE}
Beer_Data <- sqldf("select a.Brew_ID, a.Name as 'BrewName', a.City, a.State, b.Name as 'BeerName', b.ABV, b.IBU, b.Style, b.Ounces from Brews a join Beers b on a.Brew_ID = b.Brewery_id")

Brew_ID_NA <-sum(is.na(Beer_Data$Brew_ID))
BrewName_NA<-sum(is.na(Beer_Data$BrewName))
City_NA <- sum(is.na(Beer_Data$City))
State_NA <- sum(is.na(Beer_Data$State))
BeerName_NA <- sum(is.na(Beer_Data$BeerName))
ABV_NA <- sum(is.na(Beer_Data$ABV))
IBU_NA <- sum(is.na(Beer_Data$IBU))
Style_NA <- sum(is.na(Beer_Data$Style))
Ounces_NA <- sum(is.na(Beer_Data$Ounces))

na_columns <- data.frame(matrix(ncol =2, nrow=0))

colnames(na_columns) <- c("ColumnName", "NumberOfNAs")

na_columns[nrow(na_columns) +1,] = c("Brew_ID", Brew_ID_NA)
na_columns[nrow(na_columns) +1,] = c("BrewName", BrewName_NA)
na_columns[nrow(na_columns) +1,] = c("City", City_NA)
na_columns[nrow(na_columns) +1,] = c("State", State_NA)
na_columns[nrow(na_columns) +1,] = c("BeerName", BeerName_NA)
na_columns[nrow(na_columns) +1,] = c("ABV", ABV_NA)
na_columns[nrow(na_columns) +1,] = c("IBU", IBU_NA)
na_columns[nrow(na_columns) +1,] = c("Style", Style_NA)
na_columns[nrow(na_columns) +1,] = c("Ounces", Ounces_NA)


kable((na_columns), "html") %>% kable_styling(bootstrap_options="striped", full_width = F, font_size = 14)

````


Data Snapshot: First 6 Observations
========================================================
```{r echo = FALSE, include = TRUE, fig.width = 20}


Beer_Data <- sqldf("select a.Brew_ID, a.Name as 'BrewName', a.City, a.State, b.Name as 'BeerName', b.ABV, b.IBU, b.Style, b.Ounces from Brews a join Beers b on a.Brew_ID = b.Brewery_id")

kable(head(Beer_Data), "html") %>% kable_styling(bootstrap_options="striped", full_width = F, font_size = 14)

```

Data Snapshot: Last 6 Observations
========================================================
```{r echo = FALSE, include = TRUE, fig.width = 20}

kable(tail(Beer_Data), "html") %>% kable_styling(bootstrap_options="striped", full_width = F, font_size = 14)

```


Summary of Findings
========================================================
Breweries per State
```{r, echo=FALSE, include = TRUE, fig.width = 16, fig.height =12}

State_Brews <-  aggregate(Brew_ID ~ State , Brews, length)

colnames(State_Brews) <- c("State","NumberofBreweries")

State_Brews <- State_Brews[order(-State_Brews$NumberofBreweries,decreasing = TRUE),]


#par(las=2)
#par(mar = c(3, 3, 1, 1))
#barplot(State_Brews$NumberofBreweries, names.arg = State_Brews$State, col = "Red", main = "Number of Breweries per State",  xlab = "Count", ylab = "State",  xlim = c(0,50), horiz = TRUE)

g <- ggplot(State_Brews, aes(x=reorder(State, -NumberofBreweries), y=NumberofBreweries))
g +geom_bar(stat="identity") + labs(title = "Number of Breweries per State", y="Number of Breweries", x="State")+theme(axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 16))

```


Summary of Findings
========================================================
Breweries per State
```{r, echo=FALSE, include = TRUE, fig.width = 35, fig.height =20, fig.align = 'center'}

State_Brews <-  aggregate(Brew_ID ~ State , Brews, length)

colnames(State_Brews) <- c("State","NumberofBreweries")

State_Brews <- State_Brews[order(-State_Brews$NumberofBreweries,decreasing = TRUE),]


trim <- function (x) gsub("^\\s+|\\s+$", "", x)
State_Brews$State <- trim(State_Brews$State) #trim leading and trailing spaces from State

stateFromLower <-function(x) {
  #read 52 state codes into local variable [includes DC (Washington D.C. and PR (Puerto Rico)]
  st.codes<-data.frame(
    state=as.factor(c("AK", "AL", "AR", "AZ", "CA", "CO", "CT", "DC", "DE", "FL", "GA",
                      "HI", "IA", "ID", "IL", "IN", "KS", "KY", "LA", "MA", "MD", "ME",
                      "MI", "MN", "MO", "MS",  "MT", "NC", "ND", "NE", "NH", "NJ", "NM",
                      "NV", "NY", "OH", "OK", "OR", "PA", "PR", "RI", "SC", "SD", "TN",
                      "TX", "UT", "VA", "VT", "WA", "WI", "WV", "WY")),
    full=as.factor(c("alaska","alabama","arkansas","arizona","california","colorado",
                     "connecticut","district of columbia","delaware","florida","georgia",
                     "hawaii","iowa","idaho","illinois","indiana","kansas","kentucky",
                     "louisiana","massachusetts","maryland","maine","michigan","minnesota",
                     "missouri","mississippi","montana","north carolina","north dakota",
                     "nebraska","new hampshire","new jersey","new mexico","nevada",
                     "new york","ohio","oklahoma","oregon","pennsylvania","puerto rico",
                     "rhode island","south carolina","south dakota","tennessee","texas",
                     "utah","virginia","vermont","washington","wisconsin",
                     "west virginia","wyoming"))
  )
  #create an nx1 data.frame of state codes from source column
  st.x<-data.frame(state=x)
  #match source codes with codes from 'st.codes' local variable and use to return the full state name
  refac.x<-st.codes$full[match(st.x$state,st.codes$state)]
  #return the full state names in the same order in which they appeared in the original source
  return(refac.x)
  
}



State_Brews$State <- stateFromLower(State_Brews$State)
State_Brewsm <- reshape2::melt(State_Brews, id=1)
map_data <-map_data("state")
ggplot(State_Brewsm, aes(map_id = State)) + geom_map(aes(fill=value), map=map_data) +  theme(legend.text=element_text(size=24)) + theme(axis.text = element_text(size = 18), axis.title = element_text(size = rel(1.75))) + theme(legend.key.size = unit(3, "in")) + expand_limits(x=map_data$long, y=map_data$lat) 


```


Summary of Findings
========================================================
Median Alcohol Content by State
```{r, echo=FALSE, include = TRUE, fig.width = 35, fig.height =20, fig.align = 'center'}


ABV_Median <- aggregate(ABV ~ State, data = Beer_Data, median, na.action = na.omit)
IBU_Median <- aggregate(IBU ~ State, data = Beer_Data, median, na.action = na.omit)

median_table <- sqldf("select a.State, ABV as 'ABV_Median', b.IBU as 'IBU_Median' from ABV_Median a left join IBU_Median b on a.State = b.State")
median_table <- within(median_table, ABVinPercent <- ABV_Median*100)
median_table$ABV_Median <- NULL
median_table <- median_table[c(1,3,2)]

median_table$State <- trim(median_table$State) #trim leading and trailing spaces from State


median_table$State <- stateFromLower(median_table$State)
median_tableM <- reshape2::melt(median_table, id=1)

abv_medianm <- sqldf("select * from median_tableM where variable = 'ABVinPercent'")
ibu_medianm <- sqldf("select * from median_tableM where variable = 'IBU_Median'")

ggplot(data = na.omit(abv_medianm), aes(map_id = State)) + geom_map(aes(fill=value), map=map_data) +  theme(legend.text=element_text(size=24)) + theme(axis.text = element_text(size = 18), axis.title = element_text(size = rel(1.75))) + theme(legend.key.size = unit(3, "in")) + expand_limits(x=map_data$long, y=map_data$lat) 



```


Summary of Findings
========================================================
Median IBU by State
```{r, echo=FALSE, include = TRUE, fig.width = 35, fig.height =20, fig.align = 'center'}
ggplot(data = na.omit(ibu_medianm), aes(map_id = State)) + geom_map(aes(fill=value), map=map_data) +  theme(legend.text=element_text(size=24)) + theme(axis.text = element_text(size = 18), axis.title = element_text(size = rel(1.75))) + theme(legend.key.size = unit(3, "in")) + expand_limits(x=map_data$long, y=map_data$lat) 


```

Summary of Findings
========================================================
State with highest ABV - Colorado
```{r echo = FALSE}
#calculate % for ABV
Beer_Data <- within(Beer_Data, ABVinPercent <- ABV*100)

maxABV <- which.max(Beer_Data$ABV)

kable((Beer_Data[maxABV,]), "html") %>% kable_styling(bootstrap_options="striped", full_width = F, font_size = 14)
```

State with highest IBU - Oregon
```{r echo = FALSE}
maxIBU <- which.max(Beer_Data$IBU)

kable((Beer_Data[maxIBU,]), "html") %>% kable_styling(bootstrap_options="striped", full_width = F, font_size = 14)

```

Summary of Findings
========================================================
ABV Statistics
```{r echo = TRUE, include = TRUE, fig.width = 16, fig.height =12}

summary_ABV <- (summary(Beer_Data$ABV))

summary_ABV

```

Summary of Findings
========================================================
Relationship between ABV and IBU
```{r echo = FALSE, include = TRUE, fig.width = 10, fig.height =8}

par(las=2)
par(mar = c(3, 3, 1, 1))

g <- ggplot(Beer_Data, aes(ABV, IBU))

# Scatterplot
g + geom_point() + 
  geom_smooth(method="lm", se=F) + 
  labs(y="IBU", 
       x="ABV", 
       title="Relationship between ABV and IBU")  


```

Recommendations
========================================================

Recommendations
========================================================
